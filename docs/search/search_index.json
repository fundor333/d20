{"config":{"lang":["it"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Raccolta della documentazione","text":"<p>Questo repo, imitando la struttura ad albero pre esistente tra i repo, contiene la documentazione dei vari servizi interni</p>"},{"location":"#aggiornare-la-documentazione","title":"Aggiornare la documentazione","text":"<p>Per aggiornare la documentazione basta aggiornare il testo del file corrispondente. Se si vuole aggiungere pagine si va nel file mkdocs.yml e si aggiunge il path relativo dal file di config fino al file .mk</p>"},{"location":"#link-utili","title":"Link Utili","text":"<p>Raccolta di link utili per lo sviluppo, debug e mantenimento dei progetti descritti in questo sito di documentazione.</p>"},{"location":"#documentazioni-ufficiali","title":"Documentazioni Ufficiali","text":"<ul> <li>Documentazione ufficiale Django</li> <li>Documentazione Django Rest Framework</li> <li>Debian, update from Debian 9</li> </ul>"},{"location":"#blog-e-altre-fonti","title":"Blog e altre fonti","text":"<ul> <li>Mozzilla Django tutorial</li> <li>Blog su python conosciuto come Mouse VS Python</li> <li>Blog riferimento per Django</li> <li>Blog con vari esempi di usi e frammenti Python</li> <li>Raccolta di moduli Django</li> <li>Wotaku - The Otaku Index</li> </ul>"},{"location":"isola/","title":"Isola che non c'\u00e8 e altri problemi","text":""},{"location":"isola/#dispositivi-e-rete","title":"Dispositivi e rete","text":""},{"location":"isola/#peppone","title":"Peppone","text":"<p>Canon iPRSvr G250</p>"},{"location":"isola/#don-camillo","title":"Don Camillo","text":"<p>Canon iPR C270/g265 PS</p>"},{"location":"isola/#problemi-di-cassa","title":"Problemi di cassa","text":"<p>Azzeramento, fare un giro di chiave</p> ProblemaSoluzione <p>Quando alla riaccensione, esempio dopo un periodo di fermo, la cassa telematica vi chiede di fate la chiusura giornaliera e vi trovate con la scritta sul display \"azzeramento girare la chiave\".</p> <p>Bisogna semplicemente premere C (CANCELLA) e fare un giro completo PREMENDO IL TASTO CHIAVE ( da AZZERAMENTO fare un giro con CHIAVE e tornare in AZZERAMENTO )</p>"},{"location":"isola/#problemi-delle-stampanti","title":"Problemi delle stampanti","text":"<p>Peppone segnala di essere Offline</p> ProblemaSoluzione <p>Peppone risulta offline anche dopo aver controllato che i cavi sono tutti stati correttamente collegati e non si riesce ne a stampare nella macchina ne inviare le scansioni fatte a Irine</p> <p>Apparentemente il cavo che esce dal fiery \u00e8 il problema. Delle volte va staccato e riattaccato per rimettere in rete Peppone</p>"},{"location":"Backend/Altro/","title":"Altre cose utili","text":""},{"location":"Backend/Altro/#setting-per-la-data-ora-fuso","title":"Setting per la data-ora fuso","text":"<pre><code>ENV DEBIAN_FRONTEND noninteractive\nENV TZ=Europe/Rome\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone\n</code></pre>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/","title":"Installazione dipendenze","text":"<p>Si assume che sia un progetto Django e che necessiti un db Postgresql. In oltre si assume che il progetto Django sia gi\u00e1 pronto per la messa sul server (settings, views, etc...).</p> <p>Come prima cosa va aggiornato il sistema</p> <pre><code>sudo apt-get update\nsudo apt-get install nginx git\n</code></pre>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#installazione-python","title":"Installazione Python","text":"<p>Indipendentemente alla versione di Python vanno installate N dipendenze</p> <pre><code>sudo apt-get install python3-pip python-dev libpq-dev\n</code></pre> <p>Questo comando installa la versione di default di Python3. Bisogna fare l'installazione manuale per la versione di Python scelta. Si suggerisce di usare sempre la pi\u00fa aggiornata e bisogna fare riferimento al sito ufficiale di Python per l'installazione</p>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#installazzione-db","title":"Installazzione DB","text":"<p>Installazione dipendenze db</p> <pre><code>sudo apt-get install postgresql postgresql-contrib\n</code></pre>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#setting-dei-componenti","title":"Setting dei componenti","text":""},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#setting-db","title":"Setting DB","text":"<p>Si inizia creando il DB. Per farlo bisogna prima entrare nel DB Server</p> <pre><code>sudo -u postgres psql\n</code></pre> <p>Quindi si lanciano i comandi SQL di creazione</p> <pre><code>CREATE DATABASE myproject;\nCREATE USER myprojectuser WITH PASSWORD 'password';\nALTER ROLE myprojectuser SET client_encoding TO 'utf8';\nALTER ROLE myprojectuser SET default_transaction_isolation TO 'read committed';\nALTER ROLE myprojectuser SET timezone TO 'UTC';\nGRANT ALL PRIVILEGES ON DATABASE myproject TO myprojectuser;\n\\q\n</code></pre>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#setup-del-codice","title":"Setup del codice","text":"<p>Bisogna portare nel server il codice. Per farlo la prima scelta \u00e9 git dal repo collegato.</p> <pre><code>git clone &lt;url_git_del_progetto&gt;\ncd &lt;nome_del_progetto&gt;\npipenv install\n</code></pre> <p>Il comando di pipenv produce una cartella con l'ambiente virtuale. Bisogna prendere nota del path della cartella.</p> <p>Ora bisogna settare GUnicorn</p> <pre><code>sudo nano /etc/systemd/system/gunicorn.service\n</code></pre> <p>E quindi inserire questi dati configurati secondo l'installazione corrente</p> <pre><code>[Unit]\nDescription=gunicorn daemon\nAfter=network.target\n\n[Service]\nUser=developer\nGroup=www-data\nWorkingDirectory=/home/developer/myproject\nExecStart=/home/developer/myproject/myprojectenv/bin/gunicorn --access-logfile - --workers 3 --bind unix:/home/developer/myproject/myproject.sock myproject.wsgi:application\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Quindi bisogna abilitare il demone</p> <pre><code>sudo systemctl start gunicorn\nsudo systemctl enable gunicorn\n</code></pre> <p>Per controllare che funzioni bisogna vedere che ha creato il sock</p> <pre><code>ls /home/developer/myproject\n</code></pre> <p>e dovrebbe tornare qualcosa tipo</p> <pre><code>manage.py  myproject  myprojectenv  myproject.sock  static\n</code></pre> <p>che contiene il file sock</p> <p>Con il seguente comando si riavvia il servizio</p> <pre><code>sudo systemctl restart gunicorn\n</code></pre>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#preparazione-di-nginx-per-gunicorn","title":"Preparazione di Nginx per GUnicorn","text":"<p>Serve creare un file di config per Nginix</p> <pre><code>sudo nano /etc/nginx/sites-available/myproject\n</code></pre> <p>E bisogna passare al file i config</p> <pre><code>server {\n    listen 80;\n    server_name server_domain_or_IP;\n\n    location = /favicon.ico { access_log off; log_not_found off; }\n    location /static/ {\n        root /home/sammy/myproject;\n    }\n\n    location ~*.php$ {\n        return 444;\n    }\n\n    ## Deny illegal Host headers\n\n    if ($host !~* ^(server_domain_or_IP|www.server_domain_or_IP)$ ) {\n        return 444;\n    }\n\n    location / {\n        include proxy_params;\n        proxy_pass http://unix:/home/sammy/myproject/myproject.sock;\n    }\n}\n</code></pre> <p>Quindi bisogna gestire le config. Viene fatto con un linking</p> <pre><code>sudo ln -s /etc/nginx/sites-available/myproject /etc/nginx/sites-enabled\n</code></pre> <p>Quindi si controlla se tutto \u00e9 ok</p> <pre><code>sudo nginx -t\n</code></pre> <p>E se tutto ok si riavvia il servizio</p> <pre><code>sudo systemctl restart nginx\n</code></pre>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#lets-encrypt","title":"Lets Encrypt","text":"<p>Aggiungi dipendenze</p> <pre><code>sudo add-apt-repository ppa:certbot/certbot\nsudo apt install python-certbot-nginx\n</code></pre> <p>Gli dai i dominii di interessati</p> <pre><code>sudo certbot --nginx -d example.com -d www.example.com\n</code></pre> <p>Qui ti fa scegliere delle config tra cui se avere il redirect automatico (consigliato) e il no redirect</p> <p>Bisogna poi controllare che funzioni il rinnovo. Per farlo lancia</p> <pre><code>sudo certbot renew --dry-run\n</code></pre> <p>E controlal che vada tutto bene</p>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#problemi-errori-e-aggiornamenti","title":"Problemi, errori e aggiornamenti","text":""},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#g-unicorn","title":"G-Unicorn","text":""},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#errore-con-gunicorn-che-non-parte","title":"Errore con GUnicorn che non parte","text":""},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#problema","title":"Problema","text":"<p>GUnicorn non parte correttamente</p>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#soluzione","title":"Soluzione","text":"<p>GUnicorn, se installato correttamente attraverso il Pipfile logga col comando</p> <pre><code>sudo journalctl -u gunicorn\n</code></pre>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#errore-nel-riavvio-di-gunicorn","title":"Errore nel riavvio di GUnicorn","text":""},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#problema_1","title":"Problema","text":"<p>GUnicorn non parte correttamente al riavvio dopo modifiche</p>"},{"location":"Backend/Django%2C%20Postgrest%2C%20Nginx%20e%20Gunicorn/#soluzione_1","title":"Soluzione","text":"<p>Va registrato il nuovo daemon</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl restart gunicorn\n</code></pre>"},{"location":"Backend/Errori%20comuni%20Django/","title":"ImportError: 'tests' module incorrectly imported from","text":"<p>Si presenta se hai sia un modulo tests che un file test.py</p>"},{"location":"Backend/FTP/","title":"Costruire un server FTP","text":"<p>Piccola guida per la creazione e configurazione di un server FTP</p>"},{"location":"Backend/FTP/#installazione","title":"Installazione","text":"<p>Per il server useremo vsftpd</p> <pre><code>sudo apt update\nsudo apt install vsftpd\n</code></pre> <p>Fatto questo controlliamo per vedere se \u00e8 in funzione</p> <pre><code>sudo systemctl status vsftpd\n</code></pre> <p>Se non funziona vai alla sezione Problemi</p> <p>Bisogna anche lanciare il comando per fare il modo che venga lanciato all avvio</p> <pre><code>sudo systemctl enable vsftpd\n</code></pre>"},{"location":"Backend/FTP/#creare-utente-ftp","title":"Creare utente FTP","text":"<p>Va creato un utente FTP per accesso al server e per gestire i file del server FTP</p> <pre><code>sudo adduser ftpuser\n</code></pre> <p>E va aggiunto all'elenco di utenti che possono usare i comandi FTP sul server</p> <pre><code>echo \"ftpuser\" | sudo tee -a  /etc/vsftpd.userlist\n</code></pre>"},{"location":"Backend/FTP/#creazione-e-configurazione-cartella-ftp","title":"Creazione e configurazione cartella FTP","text":"<p>Bisogna creare una cartella come destinazione FTP settando correttamente i permessi per la cartella e tutta la parte \"sotto\"</p> <pre><code>sudo mkdir -p /home/ftpuser/ftp_dir/upload\nsudo chmod 550 /home/ftpuser/ftp_dir\nsudo chmod -R 750 /home/ftpuser/ftp_dir/upload\nsudo chown -R ftpuser: /home/ftpuser/ftp_dir\n</code></pre>"},{"location":"Backend/FTP/#configurare-vsftpd","title":"Configurare VSFtpD","text":"<p>Per configurare il demone e il server annesso bisogna editare il file /etc/vsftpd.conf</p> <pre><code>sudo nano /etc/vsftpd.conf\n</code></pre> <p>Inizia rimuovendo il permesso di accesso anonimo</p> <pre><code>anonymous_enable=NO\nlocal_enable=YES\n</code></pre> <p>Vanno abilitati gli accessi alla home e di scrittura</p> <pre><code>write_enable=YES\nchroot_local_user=YES\nallow_writeable_chroot=YES\n</code></pre> <p>E quindi limitare a solo gli utenti aiblitati</p> <pre><code>userlist_enable=YES\nuserlist_file=/etc/vsftpd.userlist\nuserlist_deny=NO\n</code></pre> <p>Fatta tutta la configurazione va riavviato il server e verificato che sia tornato su correttamente</p> <pre><code>sudo systemctl restart vsftpd\nsudo systemctl status vsftpd\n</code></pre>"},{"location":"Backend/FTP/#problemi","title":"Problemi","text":""},{"location":"Backend/FTP/#vsftpd-risulta-offline","title":"VSFtpD risulta offline","text":"<p>Lancia il seguente comanda</p> <pre><code>sudo systemctl start vsftpd\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/","title":"Proteggere un server Nginx con Fail2Ban","text":""},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#introduzione","title":"Introduzione","text":"<p>Quando gli utenti falliscono ripetutamente l'autenticazione ad un servizio (o si impegnano in altre attivit\u00e0 sospette), fail2ban pu\u00f2 emettere divieti temporanei sull'indirizzo IP offensivo modificando dinamicamente il criterio del firewall in esecuzione. Ogni \"jail\" fail2ban funziona controllando i log scritti da un servizio per i pattern che indicano i tentativi falliti. Configurare fail2ban per monitorare i registri di Nginx \u00e8 abbastanza semplice utilizzando alcuni dei filtri di configurazione inclusi e alcuni creati da noi.</p>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#installazione-nginx","title":"Installazione Nginx","text":"<p>Aggiorna l'indice locale dei pacchetti e installa digitando:</p> <pre><code>sudo apt-get update\nsudo apt-get install nginx\n</code></pre> <p>Controlla lo stato di Nginx digitando:</p> <pre><code>systemctl status nginx\n</code></pre> <p>Se hai bisogno dell'IP utilizza:</p> <pre><code>ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\\/.*$//'\n</code></pre> <p>Se Nginx sta girando correttamente dovresti vedere la landing page:</p>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#comandi-utili-nginx","title":"Comandi utili Nginx","text":"<p>Se li sai gi\u00e0 a memoria puoi saltare tranquillamente questa parte.</p> <p>Arresta servizio Nginx:</p> <pre><code>sudo systemctl stop nginx\n</code></pre> <p>Avvia servizio Nginx:</p> <pre><code>sudo systemctl start nginx\n</code></pre> <p>Riavvia servizio Nginx:</p> <pre><code>sudo systemctl restart nginx\n</code></pre> <p>Ricarica settings senza drop connessioni (utile per cambi ai settings):</p> <pre><code>sudo systemctl reload nginx\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#impostazioni-dei-server-block","title":"Impostazioni dei Server Block","text":"<p>Anche questi passaggi fanno parte della configurazione standard di Nginx. Se gi\u00e0 li conosci salta questa parte</p> <p>Per permettere a Nginx di servire i contenuti, \u00e8 necessario creare un server block con le direttive corrette. Invece di modificare direttamente il file di configurazione predefinito (<code>/etc/nginx/nginx.conf</code>), ne creiamo uno nuovo in /etc/nginx/sites-available/miosito.com:</p> <pre><code>server {\n        listen 80;\n        listen [::]:80;\n\n        root /var/www/miosito.com/html;\n        index index.html index.htm index.nginx-debian.html;\n\n        server_name miosito.com www.miosito.com;\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n}\n</code></pre> <p>Abilitiamo il file creando un collegamento alla directory sites-enabled, che Nginx legge durante l'avvio:</p> <pre><code>sudo ln -s /etc/nginx/sites-available/miosito.com /etc/nginx/sites-enabled/\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#intallazione-fail2ban","title":"Intallazione Fail2Ban","text":"<p>Una volta che il tuo server Nginx \u00e8 in esecuzione puoi procedere e installare Fail2Ban:</p> <pre><code>sudo apt-get install fail2ban\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#settings-generali-fail2ban","title":"Settings generali Fail2Ban","text":"<p>Per iniziare, \u00e8 necessario regolare il file di configurazione che Fail2Ban utilizza per determinare quali registri delle applicazioni monitorare e quali azioni intraprendere quando vengono trovate voci offensive. Il file fornito di default \u00e8 <code>/etc/fail2ban/jail.conf</code>, ma potrebbe venire sovrascritto in caso di aggiornamento del pacchetto. Per fare modifiche, \u00e8 necessario copiarlo in <code>/etc/fail2ban/jail.local</code>:</p> <pre><code>sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local\n</code></pre> <p>Apri il file appena copiato in modo da poter impostare il monitoraggio del registro Nginx:</p> <pre><code>sudo nano /etc/fail2ban/jail.local\n</code></pre> <p>Se lo desidera si pu\u00f2 aggiungere una lista IP che non verranno soggetti alle policy di Fail2Ban, grazie alla direttiva <code>ignoreip</code>. Pu\u00f2 essere utile ad es. per escludere l'IP dell'ufficioo di casa:</p> <pre><code>[DEFAULT]\n\n. . .\nignoreip = 127.0.0.1/8 IP_di_casa IP_di_ufficio\n</code></pre> <p>Se si vuole si pu\u00f2 configurare un <code>bantime</code> diverso da quello di default. Il bantime \u00e8 un intero espresso in secondi, il valore di default \u00e8 600 (10 minuti).</p> <pre><code>[DEFAULT]\n\n. . .\nbantime = 3600\n</code></pre> <p>I due item successivi determinano l'ambito delle righe di registro utilizzate per determinare un client malvagio. Nello specifico individuano il momento in cui un determinato numero (direttiva <code>maxretry</code>) di tentativi viene rilevato all'interno di una particolare finestra temporale (<code>findtime</code>). Il findtime \u00e8 anch'esso un intero espresso in secondi.</p> <pre><code>[DEFAULT]\n\n. . .\nfindtime = 3600   # These lines combine to ban clients that fail\nmaxretry = 6      # to authenticate 6 times within a half hour.\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#configurazione-di-fail2ban-per-monitoraggio-log-nginx","title":"Configurazione di Fail2Ban per monitoraggio log Nginx","text":""},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#introduzione_1","title":"Introduzione","text":"<p>Di default l'unico jail abilitato \u00e8 quello <code>[ssh]</code>. I cosiddetti jail all'interno di <code>/etc/fail2ban/jail.local</code> si presentano cos\u00ec:</p> <pre><code>[nome-del-jail]\n\nenabled  = false # Disabilitato di default\nfilter   = nome-del-filter # Uguale al nome del jail, deve esistere un file omonimo nel path /etc/fail2ban/filter.d/\nport    = http,https\nlogpath = %(nginx_access_log)s # Path log da monitorare. Alternativa: %(nginx_error_log)s\n</code></pre> <p>La logica utilizzata dai jail viene definita nei filter in <code>/etc/fail2ban/filter.d/</code>. Per semplicit\u00e0 i filter vengono denominati come i jail. I filter si presentano cos\u00ec:</p> <pre><code>[Definition]\n\nfailregex = ^&lt;HOST&gt; -.*METHOD.*REGEX\n\nignoreregex =\n</code></pre> <p>dove <code>failregex</code> indica il pattern da controllare nel file di log definito nel jail e <code>ignoreregex</code> i pattern da ignorare.</p>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#configurazione-jail-specifici-per-nginx","title":"Configurazione Jail specifici per Nginx","text":""},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#jail-nginx-http-auth","title":"Jail - Nginx Http Auth","text":"<p>Per abilitare il monitoraggio dei tentativi di login cerca il jail <code>[nginx-http-auth]</code>. \u00c8 l'unico jail specifico per Nginx incluso nel package Fail2Ban per Debian/Ubuntu. Impostare quindi <code>enabled  = true</code> per abilitarlo.</p>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#jail-nginx-no-script","title":"Jail - Nginx No Script","text":"<p>Per bloccare client che cercano script per eseguirli o sfruttare un exploit creiamo un jail <code>[nginx-noscript]</code>:</p> <pre><code>[nginx-noscript]\n\nenabled  = true\nport     = http,https\nfilter   = nginx-noscript\nlogpath  = %(nginx_access_log)s\nmaxretry = 6\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#jail-nginx-bot-search-e-bad-bot","title":"Jail - Nginx Bot Search e Bad Bot","text":"<p>Per bloccare le richieste provenienti da mailicious bot conosciuti, creare <code>[nginx-botsearch]</code> e <code>[nginx-badbots]</code>:</p> <pre><code>[nginx-botsearch]\n\nenabled  = true\nfilter   = nginx-botsearch\nport     = http,https\nlogpath  = %(nginx_access_log)s\nmaxretry = 2\n\n[nginx-badbots]\n\nenabled  = true\nport     = http,https\nfilter   = nginx-badbots\nlogpath  = %(nginx_access_log)s\nmaxretry = 2\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#jail-nginx-no-home","title":"Jail - Nginx No Home","text":"<p>Per bloccare le richieste ai contenuti web nella home directory, creare un <code>[nginx-nohome]</code>:</p> <pre><code>[nginx-nohome]\n\nenabled  = true\nport     = http,https\nfilter   = nginx-nohome\nlogpath  = %(nginx_access_log)s\nmaxretry = 2\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#jail-nginx-no-proxy","title":"Jail - Nginx No Proxy","text":"<p>Per bloccare client che cercano di usare il nostro Nginx come open proxy, creare un <code>[nginx-noproxy</code>:</p> <pre><code>[nginx-noproxy]\n\nenabled  = true\nport     = http,https\nfilter   = nginx-noproxy\nlogpath  = %(nginx_access_log)s\nmaxretry = 2\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#configurazione-filter-dei-jail-abilitati","title":"Configurazione filter dei jail abilitati","text":""},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#filter-nginx-http-auth","title":"Filter - Nginx Http Auth","text":"<p>Editare <code>/etc/fail2ban/filter.d/nginx-http-auth.conf</code>:</p> <pre><code>[Definition]\n\n\nfailregex = ^ \\[error\\] \\d+#\\d+: \\*\\d+ user \"\\S+\":? (password mismatch|was not found in \".*\"), client: &lt;HOST&gt;, server: \\S+, request: \"\\S+ \\S+ HTTP/\\d+\\.\\d+\", host: \"\\S+\"\\s*$\n            ^ \\[error\\] \\d+#\\d+: \\*\\d+ no user/password was provided for basic authentication, client: &lt;HOST&gt;, server: \\S+, request: \"\\S+ \\S+ HTTP/\\d+\\.\\d+\", host: \"\\S+\"\\s*$ # Aggiungere questa riga per avere un match sugli utenti che non hanno inserito username e password\n\nignoreregex =\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#filter-nginx-bad-bots","title":"Filter - Nginx Bad Bots","text":"<p>Copiare <code>apache-badbots.conf</code> come <code>nginx-badbots.conf</code>:</p> <pre><code>sudo cp /etc/fail2ban/filter.d/apache-badbots.conf /etc/fail2ban/filter.d/nginx-badbots.conf\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#filter-nginx-bot-search","title":"Filter - Nginx Bot Search","text":"<p>Creare nuovo file:</p> <pre><code>sudo nano /etc/fail2ban/filter.d/nginx-botsearch.conf\n</code></pre> <p>Nel file copiare:</p> <pre><code># Fail2Ban filter to match web requests for selected URLs that don't exist\n#\n\n[INCLUDES]\n\n# Load regexes for filtering\nbefore = botsearch-common.conf\n\n[Definition]\n\nfailregex = ^&lt;HOST&gt; \\- \\S+ \\[\\] \\\"(GET|POST|HEAD) \\/&lt;block&gt; \\S+\\\" 404 .+$\n            ^ \\[error\\] \\d+#\\d+: \\*\\d+ (\\S+ )?\\\"\\S+\\\" (failed|is not found) \\(2\\: No such file or directory\\), client\\: &lt;HOST&gt;\\, server\\: \\S*\\, request: \\\"(GET|POST|HEAD) \\/&lt;block&gt; \\S+\\\"\\, .*?$\n\nignoreregex =\n\n\n# DEV Notes:\n# Based on apache-botsearch filter\n#\n# Author: Frantisek Sumsal\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#filter-nginx-no-script","title":"Filter - Nginx No Script","text":"<p>Creare nuovo file:</p> <pre><code>sudo nano nginx-noscript.conf\n</code></pre> <p>Nel file copiare:</p> <pre><code>[Definition]\n\nfailregex = ^&lt;HOST&gt; -.*GET.*(\\.php|\\.asp|\\.exe|\\.pl|\\.cgi|\\.scgi)\n\nignoreregex =\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#filter-nginx-no-home","title":"Filter - Nginx No Home","text":"<p>Creare nuovo file:</p> <pre><code>sudo nano nginx-nohome.conf\n</code></pre> <p>Nel file copiare:</p> <pre><code>[Definition]\n\nfailregex = ^&lt;HOST&gt; -.*GET .*/~.*\n\nignoreregex =\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#filter-nginx-no-proxy","title":"Filter - Nginx No Proxy","text":"<p>Creare nuovo file:</p> <pre><code>sudo nano nginx-noproxy.conf\n</code></pre> <p>Nel file copiare:</p> <pre><code>[Definition]\n\nfailregex = ^&lt;HOST&gt; -.*GET http.*\n\nignoreregex =\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#attivazione-delle-jail-nginx","title":"Attivazione delle Jail Nginx","text":"<p>Riavvia il servizio di Fail2Ban:</p> <pre><code>sudo service fail2ban restart\n</code></pre>"},{"location":"Backend/Nginx%20Server%20con%20Fail2Ban/#ottenere-info-su-stato-jail","title":"Ottenere info su stato Jail","text":"<pre><code>sudo fail2ban-client status\n</code></pre>"},{"location":"Esempi/Google%20implementation/","title":"Implementazione di servizi Google in Python","text":""},{"location":"Esempi/Google%20implementation/#python-e-scrivere-in-fondo-a-un-foglio-di-calcolo-google","title":"Python e scrivere in fondo a un foglio di calcolo Google","text":"<pre><code>import datetime\nimport logging\nfrom typing import List\nimport pygsheets\n\nSCOPES = [\n    \"https://www.googleapis.com/auth/spreadsheets\",\n]\nSERVICE_ACCOUNT_FILE = \"account.json\"\n\n\ndef add_to_sheet(spreadsheet_id: int, worksheet_title:str, data=list[dict]):\n\n    client = pygsheets.authorize(service_file=SERVICE_ACCOUNT_FILE)\n    sheet = client.open_by_key(spreadsheet_id)\n\n    wks = sheet.worksheet_by_title(worksheet_title)\n    all_values = wks.get_all_values()\n\n    i = 0\n    for e in all_values:\n        if \"\".join(e) != \"\":\n            i += 1\n\n    for element in data:\n        wks.insert_rows(\n            i,\n            values=[\n                element['col1'],\n                element['col2'],\n                element['col3'],\n                element['col4'],\n            ],\n            inherit=True,\n        )\n        done.append(element.id)\n        i += 1\n</code></pre>"},{"location":"Games/Monster%20Hunter%20Wild/","title":"Monster Hunter Wild","text":"<p>Gioco della serie Monster Hunter uscito nel 2025, multipiattaforma e con multiplayer crossplatform.</p>"},{"location":"Games/Monster%20Hunter%20Wild/#il-multiplayer","title":"Il multiplayer","text":"<p>Ci sono varie modalit\u00e0 di multiplayer:</p> <ul> <li>Razzo SOS chiama gente dalla stanza in cui sei in aiuto</li> <li>Invito di amici chiedi aiuto pre caccia ai tuoi amici per cacciare i mostri</li> <li>Annuncio in bacheca tu metti l'annuncio e chi risponde partecipa, sempre legato alle stanze</li> </ul> <p>Detto questo le stanze si formano con 3 tipi di persone:</p> <ul> <li>A caso i server faranno tutto il lavoro</li> <li>Con i gruppi di collegamento se ti trovi bene con un massimo di altri 3 giocatori puoi creare un gruppo di collegamento per giocare con i soliti</li> <li>Fare parte di una squadra Se si fa parte di una squadra \u00e8 possibile essere in una stanza con un massimo di 50 persone che permettono avere sempre qualcuno con cui giocare ma che comunque conosci o \u00e8 l'amico di un amico.</li> </ul>"},{"location":"Games/Monster%20Hunter%20Wild/#faq","title":"FAQ","text":"Mandare l'amicizia <p>Per mandare la richiesta dell'amicizia a qualcuno bisogna avere l'id giocatore della persona.  Puoi vedere il tuo ID cacciatore nel gioco da Menu di gioco &gt; Informazioni &gt; Profilo cacciatore &gt; Mostra ID cacciatore</p> Fare parte di una squadra <p>Per far parte di una squadra bisogna o crearne una nuova dal menu ingame e invitare i propri amici o inviare il proprio codice cacciatore al team leader che poi ti aggiunge </p> Io/il mio amico non vede la missione che sto condividendo, come sistemiamo? <p>La missione appare nel menu delle missioni secondarie/altre missioni solo se le persone sono nella stanza.  In ogni caso appare anche negli inviti nel menu personale di tutti i cacciatori che sono nella stessa stanza</p> Come entro nella stanza della squadra/gruppo di collegamento? <p>Quando entri nel gioco o dal menu di comunicazione, se sei online, \u00e8 possibile entrare in una stanza. Tra le scelte possibili c'\u00e8 sia di crearne aperte, aperte ma con vincoli, con password, entrare nella stanza della squadra o del gruppo di collegamento. Da li poi si pu\u00f2 interagire con gli altri cacciatori senza grossi problemi</p>"},{"location":"Software%20e%20App/manga/","title":"App per leggere, scaricare e gestire scansioni di Manga","text":"<p>Negli anni ho letto centinaia e centinaia tra manga, manhwa, webcomics e fumetti ho accumulato alcuni tool che possono essermi utili per gestire questa mia passione.</p>"},{"location":"Software%20e%20App/manga/#registrare-manga","title":"Registrare Manga","text":"<p>Negli anni ho cercato tool per sincronizzare i tool che uso per segnarmi dove sono arrivato con le letture di manga/manhwa/webcomics/fumetti e con gli anime/serie in quanto nei vari momenti della mia vita ne ho usato di diversi e che sono o meno implementati con i tool che uso per leggere.</p> <p>Per segnare cosa leggo uso:</p> <ul> <li>MyAnimeList</li> <li>AniList</li> <li>Kitsu</li> <li>Simkl</li> </ul> <p>Per sincronizzare questi uso:</p> <ul> <li>MALSync</li> </ul>"},{"location":"Software%20e%20App/manga/#lettore-di-manga","title":"Lettore di Manga","text":"<p>L'ultima app che uso \u00e8 una app Android \u00e8 Mihon, fork dell'app Tachiyomi.</p> <p>L'app \u00e8 solo disponibile da GitHub e va installata via dev dall apk ma facendo questo non si ha tutto quello che serve. Per farlo funzionare bisogna aggiungere il repository per farli trovare e installare le estensioni.</p> <p>La guida \"ufficiale\" sarebbe disonibile a questo link dove si pu\u00f2 comunque installare direttamente le estensioni o farlo registrando il repo.</p>"},{"location":"Software%20e%20App/manga/#registrare-le-estensioni","title":"Registrare le estensioni","text":"<p>Per registrare le estensioni bisogna andare su <code>More -&gt; Settings -&gt; Browse -&gt; Extension repos / Edit repos</code> e aggiungere il seguente link <code>https://raw.githubusercontent.com/keiyoushi/extensions/repo/index.min.json</code></p>"}]}